{
  "builders": [
    {
      "type": "vsphere-iso",
      "convert_to_template": true,
      "vcenter_server": "{{user `vcenter_server`}}",
      "username": "{{user `vcenter_username`}}",
      "password": "{{user `vcenter_password`}}",
      "insecure_connection": "{{user `insecure_connection`}}",
      "folder": "{{user `vcenter_folder`}}",
      "cluster": "{{user `vcenter_cluster`}}",
      "datastore": "{{user `vcenter_datastore`}}",
      
      "communicator": "winrm",
      "winrm_username": "{{user `winrm_username`}}",
      "winrm_password": "{{user `winrm_password`}}",

      "guest_os_type": "windows9Server64Guest",
      "vm_name": "ws22-std-gui-ltsc",
      "vm_version": 19,

      "CPUs": 4,
      "cpu_cores": 4,
      "RAM": 4096,
      "RAM_reserve_all": true,
      
      "disk_controller_type": "lsilogic-sas",
      "storage": [
        {
          "disk_size": 102400,
          "disk_controller_index": 0,
          "disk_thin_provisioned": true
        }
      ],
      "network_adapters": [
        {
          "network": "{{user `vcenter_network`}}",
          "network_card": "vmxnet3"
        }
      ],
      "firmware": "efi",
      "NestedHV": true,

      "iso_paths": [
        "{{user `vcenter_iso_ws2022_desktop`}}",
        "{{user `vcenter_iso_vmwaretools`}}"
      ],
      "cd_files": [
        "./*"
      ],
      "remove_cdrom": true,
      "boot_wait": "2s",
      "boot_command": [
        "<enter>"
      ]
    }
  ],
  "provisioners": [
    {
      "type": "powershell",
      "max_retries": 3,
      "pause_before": "2m",
      "inline": [
        "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12",
        "Set-PackageSource -Name PSGallery -Trusted",
        "Install-PackageProvider -Name Nuget -MinimumVersion 2.8.5.201 -Scope AllUsers -Confirm:$false -Force"],
      "elevated_user": "{{user `winrm_username`}}",
      "elevated_password": "{{user `winrm_password`}}"
    },
     {
      "type": "windows-restart",
      "restart_check_command": "powershell -command \"& {Write-Output 'restarted.'}\""
    },
    {
      "type": "powershell",
      "max_retries": 3,
      "pause_before": "2s",
      "inline": [
        "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12", 
        "Install-Module -Name PackageManagement -MinimumVersion 1.4.6 -Scope AllUsers -AllowClobber -Repository PSGallery -Confirm:$false -Force"],
      "elevated_user": "{{user `winrm_username`}}",
      "elevated_password": "{{user `winrm_password`}}"
    },
    {
      "type": "windows-restart",
      "restart_check_command": "powershell -command \"& {Write-Output 'restarted.'}\""
    },
    {
      "type": "powershell",
      "max_retries": 3,
      "pause_before": "2s",
      "inline": [
        "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12", 
        "Install-Module -Name PowerShellGet -MinimumVersion 2.2.5 -Scope AllUsers -AllowClobber -Repository PSGallery -Confirm:$false -Force -WarningAction Continue",
        "Remove-Module -Name PowerShellGet -ErrorAction Ignore",
        "Remove-Module -Name PackageManagement -ErrorAction Ignore",
        "$ModulesToDelete = @(Get-Module -Name PowerShellGet -ListAvailable | Where-Object Version -lt 2.2.5)",
        "foreach ($m in $ModulesToDelete) { Remove-Item -Path (Split-Path -Path $m.Path) -Recurse -Force }"
      ],
      "elevated_user": "{{user `winrm_username`}}",
      "elevated_password": "{{user `winrm_password`}}"
    },
    {
      "type": "windows-restart",
      "restart_check_command": "powershell -command \"& {Write-Output 'restarted.'}\""
    },
    {
      "type": "powershell",
      "max_retries": 3,
      "pause_before": "2s",
      "inline": ["f:\\Scripts\\ConfigPreReboot.ps1 -Configfile f:\\ws22-std-gui-ltsc-OSConfig.json"],
      "elevated_user": "{{user `winrm_username`}}",
      "elevated_password": "{{user `winrm_password`}}"
    },
    {
      "type": "windows-restart",
      "restart_check_command": "powershell -command \"& {Write-Output 'restarted.'}\""
    },
    {
      "type": "powershell",
      "max_retries": 3,
      "inline": ["f:\\Scripts\\ConfigPostReboot.ps1 -Configfile f:\\ws22-std-gui-ltsc-OSConfig.json"],
      "elevated_user": "{{user `winrm_username`}}",
      "elevated_password": "{{user `winrm_password`}}"
    },
    {
      "type": "windows-restart",
      "restart_check_command": "powershell -command \"& {Write-Output 'restarted.'}\""
    },
    {
      "type": "powershell",
      "max_retries": 2,
      "timeout": "2h",
      "inline": ["f:\\Scripts\\ConfigUpdates.ps1 -Configfile f:\\ws22-std-gui-ltsc-OSConfig.json"],
      "elevated_user": "{{user `winrm_username`}}",
      "elevated_password": "{{user `winrm_password`}}"
    },

    {
      "type": "windows-restart",
      "pause_before": "30s",
      "restart_check_command": "powershell -command \"& {Write-Output 'restarted.'}\"",
      "restart_timeout": "30m",
      "max_retries": 5
    },

    {
      "type": "powershell",
      "max_retries": 2,
      "inline": ["f:\\Scripts\\ConfigUpdates.ps1 -Configfile f:\\ws22-std-gui-ltsc-OSConfig.json"],
      "elevated_user": "{{user `winrm_username`}}",
      "elevated_password": "{{user `winrm_password`}}"
    },

    {
      "type": "windows-restart",
      "restart_check_command": "powershell -command \"& {Write-Output 'restarted.'}\"",
      "restart_timeout": "30m",
      "max_retries": 5
    },

    {
      "type": "powershell",
      "max_retries": 2,
      "inline": ["f:\\Scripts\\ConfigUpdates.ps1 -Configfile f:\\ws22-std-gui-ltsc-OSConfig.json"],
      "elevated_user": "{{user `winrm_username`}}",
      "elevated_password": "{{user `winrm_password`}}"
    },

    {
      "type": "windows-restart",
      "restart_check_command": "powershell -command \"& {Write-Output 'restarted.'}\"",
      "restart_timeout": "30m",
      "max_retries": 5
    },
    
    {
      "type": "powershell",
      "max_retries": 2,
      "inline": ["Try { Copy-Item -Path F:\\Scripts\\ConfigureWinRM-https.ps1 -Destination C:\\Temp\\ -Force } Catch { Throw $_ }"],
      "elevated_user": "{{user `winrm_username`}}",
      "elevated_password": "{{user `winrm_password`}}"
    },

    {
      "type": "powershell",
      "max_retries": 2,
      "inline": ["f:\\Scripts\\ConfigLast.ps1 -Configfile f:\\ws22-std-gui-ltsc-OSConfig.json"],
      "elevated_user": "{{user `winrm_username`}}",
      "elevated_password": "{{user `winrm_password`}}"
    }
  ]
}